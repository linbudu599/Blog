{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx",
    "path": "/blog",
    "result": {"data":{"allPost":{"nodes":[{"slug":"/use-ref","title":"从一个需求出发，聊聊useRef三兄弟","date":"2021-08-29","excerpt":"前言 Vue、React、Angular这一类前端框架的出现使得我们不再需要去手动操作Dom了，回想曾经的JQuery时代，与DOM打交道是最为频繁也最为头疼的，比如我前端入门时期收获最多的书之一就是 JavaScript DOM编程艺术 。 现在我们和DOM…","timeToRead":1,"description":null,"tags":null},{"slug":"/ts-type-programming","title":"TypeScript的另一面：类型编程","date":"2021-08-29","excerpt":"前言 作为前端开发的趋势之一，TypeScript 正在为越来越多的开发者所喜爱，从大的方面来说，几乎九成的框架与工具库都以其写就（或者就是类似的类型方案，如 Flow）；而从小的方面来说，即使是写个配置文件（如 vite 的配置文件）或者小脚本（感谢 ts-node…","timeToRead":6,"description":null,"tags":null},{"slug":"/tc39-proposals","title":"聊一聊进行中的TC39提案（stage1/2/3）","date":"2021-08-29","excerpt":"前言 最近看到了一些很有趣的ES提案，如Record与Tuple数据类型，思路来自RxJS的Observable，借鉴自函数式编程的throw Expressions，带来更好错误处理的 Error Cause 等，可以认为一旦这些提案完全进入到ES新特性中，前端er…","timeToRead":2,"description":null,"tags":null},{"slug":"/graphql-directives","title":"你不知道的 GraphQL Directives","date":"2021-08-29","excerpt":"这篇文章来自数月前的随手记录，由于觉得内容较为小众（GraphQL接触的人已经不多了，其中的Directive了解的人更少）就没有发出来。这次心血来潮炒个冷饭。实际上我一直很想出一系列GraphQL…","timeToRead":1,"description":null,"tags":null},{"slug":"/fe-tools-2021","title":"写在2021: 值得关注/学习的前端框架和工具库","date":"2021-08-29","excerpt":"前言 最近在知乎看到了这么个问题： 学完Vue还有必要学习React和Node吗？ ， 有很奇妙的感觉，因为我在最开始入门前端时，也是以Vue入的门，在“学完”Vue…","timeToRead":3,"description":null,"tags":null},{"slug":"/prisma-02","title":"【Prisma，下一代ORM，不仅仅是ORM（下篇）","date":"2021-06-15","excerpt":"在上一篇文章中，我们从 NodeJS 社区的传统 ORM 讲起，介绍了它们的特征以及传统 ORM 的 Active Record、Data Mapper 模式，再到 Prisma 的环境配置、基本使用以及单表实践。在这篇文章中，我们将介绍 Prisma…","timeToRead":3,"description":null,"tags":null},{"slug":"/prisma-01","title":"【Prisma，下一代ORM，不仅仅是ORM（上篇）","date":"2021-06-13","excerpt":"前言 本篇文章将会介绍一个 NodeJS 社区中的 ORM：Prisma。我接触它的时间不算长，但已经对它的未来发展充满信心。这篇文章其实三个月以前就写了一部分，所以文中会出现“如果你觉得它不错，不如考虑基于 Prisma 来完成你的毕设”这样的话。 在刚开始写的时候， bven…","timeToRead":4,"description":null,"tags":null},{"slug":"/graphql-tech-list","title":"【outdated】GraphQL 技术备忘","date":"2021-04-22","excerpt":"前言 ​ 这段时间一直在给 nx 写插件,感觉我老是定目标定的雄心勃勃,真正开始实现时却懒懒散散. 比如第一期项目规划了 11 个插件包,目前只有两个处在能用的状态,其他压根还没开始. 主要原因还是涉及的知识确实有点多,每个插件包的集成方式都不同 blabla…","timeToRead":1,"description":null,"tags":null},{"slug":"/ngrx","title":"【draft】NgRx 快速入门(WIP)","date":"2021-02-28","excerpt":"前言 本文进度 完成 NgRx 基本的文档阅读 将对应的代码整理到 Nx-Todo-App > NgRx-Practice 中 比对 Redux 系列中的库 草稿 讲人话, 发文章, 西内! 是的, 我又发现了一个很好玩的东西! Redux + Redux-Saga…","timeToRead":1,"description":null,"tags":null},{"slug":"/rxjs-learn","title":"【draft】RxJS学习记录","date":"2021-02-14","excerpt":"前言 整理进度 创建 转换 过滤 组合 多播(multicast) 错误处理 工具 条件/布尔 数学/聚合 Subject Scheduler 太狼老师的教程 不愧是\"海量 API…","timeToRead":4,"description":null,"tags":null},{"slug":"/midway-type-graphql-usage","title":"【outdated】在MidwayJS中使用 TypeGraphQL + TypeORM","date":"2021-01-22","excerpt":"前言 其实去年六七月左右我就有尝试过在 MidwayJS 中使用 GraphQL 及相关技术栈了了, 但是当时真的太菜了, 完全不清楚依赖注入啊容器啊相关的概念, 于是半途而废放弃了, 改成用原生的 Apollo-Server 了. 这一次是在看到了淘系技术黑皮书中 JSCON…","timeToRead":1,"description":null,"tags":null},{"slug":"/next-apollo","title":"【outdated】Next-Apollo 源码解析","date":"2021-01-06","excerpt":"前言 最近在搞 GraphQL 相关的东西, 发现社区里的东西真的五花八门, 玩都玩不过来, 举几个例子: 下一代 ORM Prsima, 挺神奇的一个工具, \"不仅仅是 ORM\", 和 GraphQL 倒不是强关联的, 但放一起就是异样的合拍. Apollo-Server…","timeToRead":2,"description":null,"tags":null},{"slug":"/2020-summary","title":"成事说，遂事谏 2020年度总结","date":"2020-12-26","excerpt":"202…","timeToRead":1,"description":null,"tags":null},{"slug":"/apollo-server-vercel","title":"Apollo-Server-Vercel 源码浅析","date":"2020-12-07","excerpt":"总共就四个文件: index.ts ApolloServer.ts setHeaders.ts vercelApollo.ts Index.ts 入口文件, 不做讲解 ApolloServer.ts 先去掉了文件上传相关的代码实现 继承了 apollo-server…","timeToRead":1,"description":null,"tags":null},{"slug":"/express-graphql","title":"【outdated】Express-GraphQL 源码解读","date":"2020-11-19","excerpt":"前言 最近在“认真”的学习 GraphQL，感觉自己之前学的还是太浅了，很多现在看来是核心特性的当时都不知道...，比如 Subscription 操作，还有 TypeGraphQL…","timeToRead":1,"description":null,"tags":null},{"slug":"/flutter-state-management-01","title":"【outdated】Flutter状态管理(一)：使用Provider并复用你的Redux思想","date":"2020-09-23","excerpt":"前言 个人认为, 状态管理真的是前端避不开的问题..., 随着应用复杂度的提升, 好的状态管理方案在解耦 & 数据共享 & 数据流追踪控制 等方面都能起到很好的作用. 在 Web 开发中, 我们使用过 Redux/Mobx/Reconciler…","timeToRead":1,"description":null,"tags":null},{"slug":"/flutter-state-management-02","title":"【outdated】Flutter状态管理初接触(二)：InheritedWidget与React中的context","date":"2020-09-23","excerpt":"前言 Flutter 状态管理初接触  的  上一篇   中我们介绍了基于 provider 的状态管理, 也说到它的底层是基于 InheritedWidget 的. 我在上手尝试过使用后, 个人感觉很像 React 中的 context…","timeToRead":1,"description":null,"tags":null},{"slug":"/fe-basics-2020","title":"【outdated】2020 前端基础","date":"2020-07-04","excerpt":"基础 JavaScript 基础 建议每一条都烂熟于心 常用设计模式 单例 装饰者 中介者 观察者 迭代器 装箱 / 拆箱 & 类型转换 数据类型判断 typeof 底层机器码 对于对象不准确(都会显示 object) typeof null 机器码 00…","timeToRead":4,"description":null,"tags":null},{"slug":"/babel-class","title":"从Babel编译结果看ES6的Class实质","date":"2020-03-25","excerpt":"ES6 的 Class 虽然只是一剂语法糖, 但还是为不少其他语言转过来的程序猿提供了更清晰的思路去编写代码, 即使 它的实质还是原型和原型链 . 但我们现在可以让函数做自己的事情去了, 而不是又当爹(逻辑函数)又当妈(构造函数). 但是你是否想过 ES6 的 Class…","timeToRead":1,"description":null,"tags":null},{"slug":"/user-tracing-learn","title":"【outdated】对埋点的一些思考","date":"2020-03-11","excerpt":"本篇文章迁移自笔者草稿 Repo Penumbra , 并做了一些修改 这篇文章涉及到了许多为各种不同应用设计埋点方案，以及为什么这样设计的概念，而在实际开发中我只接触/使用过  Google Analytics…","timeToRead":1,"description":null,"tags":null},{"slug":"/koa-source","title":"【outdated】Koa源码解读","date":"2020-02-25","excerpt":"写在前面 看了那么多文章，是时候也来回馈一下掘金这个让我等小白获益匪浅的社区了(●'◡'●)，这篇文章主要面对的是在阅读网上其他讲解 Koa…","timeToRead":2,"description":null,"tags":null},{"slug":"/useSelector","title":"【outdated】关于 useSelector 的一些学习","date":"2020-02-20","excerpt":"前言 又懒又忙的我会突然为 useSelector 整理一篇博文，是因为之前的我使用它，就是直接用而已，完全不考虑它替我们做了什么，和 connect 比起来又有什么好处，以及它是如何发扬 Hooks…","timeToRead":1,"description":null,"tags":null}]}},"pageContext":{"formatString":"YYYY-MM-DD"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}